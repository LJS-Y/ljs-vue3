import{_ as t,c as a,o as s,a5 as i}from"./chunks/framework.CAoZkQiS.js";const g=JSON.parse('{"title":"内容缩略","description":"","frontmatter":{},"headers":[],"relativePath":"ljs-tools/components/TextAbbreviation/index.md","filePath":"ljs-tools/components/TextAbbreviation/index.md"}'),e={name:"ljs-tools/components/TextAbbreviation/index.md"},n=i(`<h1 id="内容缩略" tabindex="-1">内容缩略 <a class="header-anchor" href="#内容缩略" aria-label="Permalink to &quot;内容缩略&quot;">​</a></h1><h3 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h3><p>内容缩略组件。</p><h3 id="独立使用" tabindex="-1">独立使用 <a class="header-anchor" href="#独立使用" aria-label="Permalink to &quot;独立使用&quot;">​</a></h3><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">TextAbbreviation</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">TextAbbreviation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      data: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。我是一段很长很长的测试内容。&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  mounted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h3 id="主参数" tabindex="-1">主参数 <a class="header-anchor" href="#主参数" aria-label="Permalink to &quot;主参数&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>类型</th><th>必填项</th><th>默认值</th><th>参考值</th><th>说明</th></tr></thead><tbody><tr><td>data</td><td>String</td><td>√</td><td></td><td></td><td>传入数据。</td></tr><tr><td>mode</td><td>String</td><td>×</td><td>line</td><td></td><td>模式。line：行截断；last：尾截断。</td></tr><tr><td>max</td><td>Number</td><td>×</td><td>3</td><td></td><td>最大行数，超过则隐藏多余部分，并显示展开按钮。</td></tr><tr><td>unit</td><td>String</td><td>×</td><td>px</td><td></td><td>单位，应用于本组件。可使用rem。</td></tr><tr><td>lineHeight</td><td>Number</td><td>×</td><td>30</td><td></td><td>行高。</td></tr><tr><td>fontSize</td><td>Number</td><td>×</td><td>14</td><td></td><td>字体大小。</td></tr></tbody></table><h3 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th style="text-align:left;">说明</th></tr></thead></table><h3 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h3><table tabindex="0"><thead><tr><th>插槽名</th><th style="text-align:left;">说明</th></tr></thead></table>`,12),d=[n];function h(l,p,r,k,o,E){return s(),a("div",null,d)}const b=t(e,[["render",h]]);export{g as __pageData,b as default};
