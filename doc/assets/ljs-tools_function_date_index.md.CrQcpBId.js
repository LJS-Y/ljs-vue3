import{_ as i,c as a,o as e,a5 as s,j as t}from"./chunks/framework.D2w-0S4J.js";const F=JSON.parse('{"title":"日期（LJSdate）","description":"","frontmatter":{},"headers":[],"relativePath":"ljs-tools/function/date/index.md","filePath":"ljs-tools/function/date/index.md"}'),h={name:"ljs-tools/function/date/index.md"},n=s('<h1 id="日期-ljsdate" tabindex="-1">日期（LJSdate） <a class="header-anchor" href="#日期-ljsdate" aria-label="Permalink to &quot;日期（LJSdate）&quot;">​</a></h1><h2 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h2><p>日期（LJSdate），V3JS框架中常用的基础库。</p><h3 id="_1-日期格式化" tabindex="-1">1.日期格式化 <a class="header-anchor" href="#_1-日期格式化" aria-label="Permalink to &quot;1.日期格式化&quot;">​</a></h3><p>通过传入的时间戳获取固定格式日期</p><p>方法：formatTime(time: Date, pattern: string)</p><p>返回值（String）：返回指定格式的日期。</p><h5 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSdate.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">formatTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;{y}-{m}-{d} {h}:{i}:{s}&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 返回2021-12-22 09:56:58</span></span></code></pre></div><h4 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h4>',10),l=t("table",{tabindex:"0"},[t("thead",null,[t("tr",null,[t("th",null,"参数"),t("th",{style:{"text-align":"center"}},"类型"),t("th",{style:{"text-align":"center"}},"必填项"),t("th",null,"默认值"),t("th",null,"说明")])]),t("tbody",null,[t("tr",null,[t("td",null,"time"),t("td",{style:{"text-align":"center"}},"Date"),t("td",{style:{"text-align":"center"}},"√"),t("td"),t("td",null,"时间。")]),t("tr",null,[t("td",null,"pattern"),t("td",{style:{"text-align":"center"}},"String"),t("td",{style:{"text-align":"center"}},"×"),t("td",{s:""},"{y}-{m}-{d} {h}:{i}:"),t("td",null,"出格式，{y}-{m}-{d} {h}:{i}:{s}.{MS}。")])])],-1),d=s(`<h3 id="_2-定制日期" tabindex="-1">2.定制日期 <a class="header-anchor" href="#_2-定制日期" aria-label="Permalink to &quot;2.定制日期&quot;">​</a></h3><p>如前一天、前一个月、前一年</p><p>方法：customizedDate(time: Date, pattern: string, span: Number)</p><p>返回值（String）：返回指定格式的指定日期。</p><h5 id="示例-1" tabindex="-1">示例 <a class="header-anchor" href="#示例-1" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 日</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSdate.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">customizedDate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;{y}-{m}-{d}&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 当前日期：2024-03-28，返回：2024-03-27</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 月</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSdate.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">customizedDate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;{y}-{m}&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 当前日期：2024-03，返回：2024-02</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 年</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSdate.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">customizedDate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;{y}&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 当前日期：2024，返回：2023</span></span></code></pre></div><h4 id="参数-1" tabindex="-1">参数 <a class="header-anchor" href="#参数-1" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>time</td><td style="text-align:center;">Date</td><td style="text-align:center;">√</td><td></td><td>时间。</td></tr><tr><td>pattern</td><td style="text-align:center;">String</td><td style="text-align:center;">√</td><td></td><td>输出格式，{y}-{m}-{d}，只处理年、月、日数据。</td></tr><tr><td>span</td><td style="text-align:center;">Number</td><td style="text-align:center;">×</td><td>0</td><td>步幅，正数为未来日期，负数为过去日期。默认为0。</td></tr></tbody></table><h3 id="_3-时间处理函数" tabindex="-1">3.时间处理函数 <a class="header-anchor" href="#_3-时间处理函数" aria-label="Permalink to &quot;3.时间处理函数&quot;">​</a></h3><p>传入[开始日期, 结束日期]，期望返回数据为[2020-10-01 00:00:00, 2020-10-01 23:59:59]。</p><p>方法：dateQjChange(dates: [Date, Date], tag: Number)</p><p>返回值（String）：返回一个所需规格的[开始日期, 结束日期]。</p><h5 id="示例-2" tabindex="-1">示例 <a class="header-anchor" href="#示例-2" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSdate.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dateQjChange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2020-10-01&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2020-10-07&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 返回[&quot;2020-10-01 00:00:00&quot;, &quot;2020-10-07 23:59:59&quot;]</span></span></code></pre></div><h4 id="参数-2" tabindex="-1">参数 <a class="header-anchor" href="#参数-2" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>dates</td><td style="text-align:center;">Array</td><td style="text-align:center;">√</td><td></td><td>[开始日期, 结束日期]。</td></tr><tr><td>tag</td><td style="text-align:center;">Number</td><td style="text-align:center;">×</td><td>1</td><td>1，补时分秒；2，补分秒；3，补秒。</td></tr></tbody></table><h3 id="_4-根据时间戳返回时长" tabindex="-1">4.根据时间戳返回时长 <a class="header-anchor" href="#_4-根据时间戳返回时长" aria-label="Permalink to &quot;4.根据时间戳返回时长&quot;">​</a></h3><p>我们想要获得这样一个数据：如3小时15分23秒。</p><p>方法：timeRunDistance({time: Number, showTag: Array, showAll: Boolean, onlyTime: Boolean})</p><p>返回值（Array）：返回3小时15分23秒。</p><h5 id="示例-3" tabindex="-1">示例 <a class="header-anchor" href="#示例-3" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> runTime</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSdate.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timeRunDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  time: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3600</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3600</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 21</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 876</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  showAll: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(runTime); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1天2小时4分钟21秒876毫秒</span></span></code></pre></div><h4 id="参数-3" tabindex="-1">参数 <a class="header-anchor" href="#参数-3" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>time</td><td style="text-align:center;">Number</td><td style="text-align:center;">√</td><td></td><td>时长，毫秒数的时长。</td></tr><tr><td>showTag</td><td style="text-align:center;">Array</td><td style="text-align:center;">×</td><td>[&#39;天&#39;, &#39;小时&#39;, &#39;分钟&#39;, &#39;秒&#39;, &#39;毫秒&#39;]</td><td>展示的标签，[&#39;天&#39;, &#39;小时&#39;, &#39;分钟&#39;, &#39;秒&#39;, &#39;毫秒&#39;]。可根据需要修改时间单位，如：[&#39;d&#39;, &#39;h&#39;, &#39;m&#39;, &#39;s&#39;, &#39;ms&#39;]。。</td></tr><tr><td>showAll</td><td style="text-align:center;">Boolean</td><td style="text-align:center;">×</td><td>false</td><td>是否完整展示，默认为false。true：0天2小时4分钟21秒876毫秒；false：2小时4分钟21秒876毫秒。</td></tr><tr><td>onlyTime</td><td style="text-align:center;">Boolean</td><td style="text-align:center;">×</td><td>false</td><td>是否只返回时间集合，默认为false，当为true时showAll参数无效。true：[0, 2, 4, 21, 876]；false：2小时4分钟21秒876毫秒。</td></tr></tbody></table><h3 id="_5-区间日期" tabindex="-1">5.区间日期 <a class="header-anchor" href="#_5-区间日期" aria-label="Permalink to &quot;5.区间日期&quot;">​</a></h3><p>统一处理方法，常用于默认的区间日期表单。</p><p>方法：initSearchDate(day: Number, time: Boolean)</p><p>返回值（Array）：返回默认起止日期。</p><h5 id="示例-4" tabindex="-1">示例 <a class="header-anchor" href="#示例-4" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSdate.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">initSearchDate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 返回[&quot;2020-10-11&quot;, &quot;2020-10-20&quot;]</span></span></code></pre></div><h4 id="参数-4" tabindex="-1">参数 <a class="header-anchor" href="#参数-4" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>day</td><td style="text-align:center;">Number</td><td style="text-align:center;">×</td><td>10</td><td>跨度。</td></tr><tr><td>time</td><td style="text-align:center;">Boolean</td><td style="text-align:center;">×</td><td>false</td><td>是否开启时分秒。</td></tr></tbody></table><h3 id="_6-区间日期2" tabindex="-1">6.区间日期2 <a class="header-anchor" href="#_6-区间日期2" aria-label="Permalink to &quot;6.区间日期2&quot;">​</a></h3><p>获取当月，当年，近n年的区间。</p><p>方法：initSearchDateQj(type: String, n: Number)</p><p>返回值（String）：返回默认起止日期。</p><h5 id="示例-5" tabindex="-1">示例 <a class="header-anchor" href="#示例-5" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSdate.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">initSearchDateQj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 返回[&quot;2020-10-01&quot;, &quot;2020-10-20&quot;]</span></span></code></pre></div><h4 id="参数-5" tabindex="-1">参数 <a class="header-anchor" href="#参数-5" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>type</td><td style="text-align:center;">String</td><td style="text-align:center;">×</td><td>date</td><td>类型：datetime,date,month,year。</td></tr><tr><td>n</td><td style="text-align:center;">Number</td><td style="text-align:center;">×</td><td>0</td><td>type为year时，年的跨度。</td></tr></tbody></table>`,40),k=[n,l,d];function r(p,o,g,y,c,E){return e(),a("div",null,k)}const b=i(h,[["render",r]]);export{F as __pageData,b as default};
