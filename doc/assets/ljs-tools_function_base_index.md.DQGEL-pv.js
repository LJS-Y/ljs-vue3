import{_ as t,c as a,o as s,a5 as i}from"./chunks/framework.CAoZkQiS.js";const y=JSON.parse('{"title":"基础（LJSbase）","description":"","frontmatter":{},"headers":[],"relativePath":"ljs-tools/function/base/index.md","filePath":"ljs-tools/function/base/index.md"}'),e={name:"ljs-tools/function/base/index.md"},l=i(`<h1 id="基础-ljsbase" tabindex="-1">基础（LJSbase） <a class="header-anchor" href="#基础-ljsbase" aria-label="Permalink to &quot;基础（LJSbase）&quot;">​</a></h1><h2 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h2><p>基础（LJSbase），V3JS框架中常用的基础库。</p><h3 id="字段判断" tabindex="-1">字段判断 <a class="header-anchor" href="#字段判断" aria-label="Permalink to &quot;字段判断&quot;">​</a></h3><p>判断某个字段，是否为undefined、null、&#39;&#39;。</p><p>方法：fieldCheck(field: Array)</p><p>返回值（Boolean）：该字段是否为undefined || null || &#39;&#39;。</p><h5 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSbase.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fieldCheck</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.aaaa)</span></span></code></pre></div><h4 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>field</td><td style="text-align:center;">any</td><td style="text-align:center;">√</td><td></td><td>需要判断的字段。</td></tr></tbody></table><h3 id="深拷贝" tabindex="-1">深拷贝 <a class="header-anchor" href="#深拷贝" aria-label="Permalink to &quot;深拷贝&quot;">​</a></h3><p>方法：deepCopy(obj: Any)</p><p>返回值（Any）：返回深拷贝后的数据。</p><h5 id="示例-1" tabindex="-1">示例 <a class="header-anchor" href="#示例-1" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSbase.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deepCopy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obj);</span></span></code></pre></div><h4 id="参数-1" tabindex="-1">参数 <a class="header-anchor" href="#参数-1" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>obj</td><td style="text-align:center;">Any</td><td style="text-align:center;">√</td><td></td><td>待深拷贝数据。</td></tr></tbody></table><h3 id="树-通过一个值反查" tabindex="-1">树 - 通过一个值反查 <a class="header-anchor" href="#树-通过一个值反查" aria-label="Permalink to &quot;树 - 通过一个值反查&quot;">​</a></h3><p>可获取该值对应的对象及其所有父级对象。</p><p>方法：getTreeParents({data: Array, value: String, key: String, children: String})</p><p>返回值（String）：选中的数据包括直系父的集合</p><h5 id="示例-2" tabindex="-1">示例 <a class="header-anchor" href="#示例-2" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> parents</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSbase.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTreeParents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({data, value, key});</span></span></code></pre></div><h4 id="参数-2" tabindex="-1">参数 <a class="header-anchor" href="#参数-2" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>data</td><td style="text-align:center;">Array</td><td style="text-align:center;">√</td><td></td><td>原始数据。</td></tr><tr><td>value</td><td style="text-align:center;">String</td><td style="text-align:center;">√</td><td></td><td>选中的数据唯一值。</td></tr><tr><td>key</td><td style="text-align:center;">String</td><td style="text-align:center;">×</td><td>id</td><td>选中的数据唯一值对应的key。</td></tr><tr><td>children</td><td style="text-align:center;">String</td><td style="text-align:center;">×</td><td>children</td><td>子集对应的集合。</td></tr></tbody></table><h3 id="树-部分数据禁用" tabindex="-1">树 - 部分数据禁用 <a class="header-anchor" href="#树-部分数据禁用" aria-label="Permalink to &quot;树 - 部分数据禁用&quot;">​</a></h3><p>根据指定条件进行禁用处理并返回新的树型数据。</p><p>方法：editTreeParentIdCheck(data: Array, opts: data)</p><p>返回值（Array）：根据条件返回一个部分禁用选择的树数据。</p><h5 id="示例-多禁用条件" tabindex="-1">示例 - 多禁用条件 <a class="header-anchor" href="#示例-多禁用条件" aria-label="Permalink to &quot;示例 - 多禁用条件&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSbase.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">editTreeParentIdCheck</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data, [{value: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, key: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, {value: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, key: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;level&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}]);</span></span></code></pre></div><h5 id="示例-清空禁用条件" tabindex="-1">示例 - 清空禁用条件 <a class="header-anchor" href="#示例-清空禁用条件" aria-label="Permalink to &quot;示例 - 清空禁用条件&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSbase.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">editTreeParentIdCheck</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data);</span></span></code></pre></div><h4 id="参数-3" tabindex="-1">参数 <a class="header-anchor" href="#参数-3" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>data</td><td style="text-align:center;">Array</td><td style="text-align:center;">√</td><td></td><td>原始数据。</td></tr><tr><td>opts</td><td style="text-align:center;">Array</td><td style="text-align:center;">×</td><td>[]</td><td>条件数组。</td></tr></tbody></table><h4 id="opts参数" tabindex="-1">opts参数 <a class="header-anchor" href="#opts参数" aria-label="Permalink to &quot;opts参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>value</td><td style="text-align:center;">String</td><td style="text-align:center;">√</td><td></td><td>需要禁用项的对比值。</td></tr><tr><td>key</td><td style="text-align:center;">String</td><td style="text-align:center;">√</td><td></td><td>需要禁用项的对比值对应的键名。</td></tr></tbody></table><h3 id="数据转换-tree转list" tabindex="-1">数据转换 - tree转list <a class="header-anchor" href="#数据转换-tree转list" aria-label="Permalink to &quot;数据转换 - tree转list&quot;">​</a></h3><p>方法：handleTreeList(treeList: Array, list: Array)</p><h5 id="示例-3" tabindex="-1">示例 <a class="header-anchor" href="#示例-3" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> list</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [];</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSbase.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handleTreeList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tree, list);</span></span></code></pre></div><h4 id="参数-4" tabindex="-1">参数 <a class="header-anchor" href="#参数-4" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>treeList</td><td style="text-align:center;">Array</td><td style="text-align:center;">√</td><td></td><td>待转换的树结构数据。</td></tr><tr><td>list</td><td style="text-align:center;">Array</td><td style="text-align:center;">√</td><td></td><td>转换后的数据。</td></tr></tbody></table><h3 id="数据转换-list转tree" tabindex="-1">数据转换 - list转tree <a class="header-anchor" href="#数据转换-list转tree" aria-label="Permalink to &quot;数据转换 - list转tree&quot;">​</a></h3><p>方法：handleListTree(data: Array, id: String, parentId: String, children: String)</p><h5 id="示例-4" tabindex="-1">示例 <a class="header-anchor" href="#示例-4" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSbase.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handleListTree</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;pid&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="参数-5" tabindex="-1">参数 <a class="header-anchor" href="#参数-5" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>data</td><td style="text-align:center;">Array</td><td style="text-align:center;">√</td><td></td><td>待转换的数据。</td></tr><tr><td>id</td><td style="text-align:center;">String</td><td style="text-align:center;">×</td><td>id</td><td>自身id键。</td></tr><tr><td>parentId</td><td style="text-align:center;">String</td><td style="text-align:center;">×</td><td>parentId</td><td>父id键。</td></tr><tr><td>children</td><td style="text-align:center;">String</td><td style="text-align:center;">×</td><td>children</td><td>children键。</td></tr></tbody></table><h3 id="设置根节点字体" tabindex="-1">设置根节点字体 <a class="header-anchor" href="#设置根节点字体" aria-label="Permalink to &quot;设置根节点字体&quot;">​</a></h3><p>多用于rem项目。</p><p>方法：setRemUnit()</p><h5 id="示例-5" tabindex="-1">示例 <a class="header-anchor" href="#示例-5" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 直接更改DOM根节点的字体大小值。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSbase.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setRemUnit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h3 id="通过key查找value" tabindex="-1">通过key查找value <a class="header-anchor" href="#通过key查找value" aria-label="Permalink to &quot;通过key查找value&quot;">​</a></h3><p>常用于：字典值回显，接口值回显。</p><p>方法：selectDictLabel(datas: Array, value: String, labelKey: String, valueKey: String, isTrue: Boolean)</p><p>返回值（Array）：返回值所对应的文本。</p><h5 id="示例-6" tabindex="-1">示例 <a class="header-anchor" href="#示例-6" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSbase.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">selectDictLabel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(datas, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="参数-6" tabindex="-1">参数 <a class="header-anchor" href="#参数-6" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>datas</td><td style="text-align:center;">Array</td><td style="text-align:center;">√</td><td></td><td>基础数据。</td></tr><tr><td>value</td><td style="text-align:center;">String</td><td style="text-align:center;">√</td><td></td><td>值。</td></tr><tr><td>labelKey</td><td style="text-align:center;">String</td><td style="text-align:center;">×</td><td>label</td><td>查找的名称key。如果参数值为$index，则返回索引值。</td></tr><tr><td>valueKey</td><td style="text-align:center;">String</td><td style="text-align:center;">×</td><td>value</td><td>比对的数据key。</td></tr><tr><td>isTrue</td><td style="text-align:center;">Boolean</td><td style="text-align:center;">×</td><td>false</td><td>false时为字符串，true时为布尔型。</td></tr></tbody></table><h3 id="高级日志" tabindex="-1">高级日志 <a class="header-anchor" href="#高级日志" aria-label="Permalink to &quot;高级日志&quot;">​</a></h3><p>可输出带颜色的日志。</p><p>方法：colorLog(content: Array, type: String, color: Array)</p><h5 id="示例-7" tabindex="-1">示例 <a class="header-anchor" href="#示例-7" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> technicalSupport</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;技术支持：&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;龙九山&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">colorLog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(technicalSupport);</span></span></code></pre></div><h4 id="参数-7" tabindex="-1">参数 <a class="header-anchor" href="#参数-7" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>content</td><td style="text-align:center;">Array</td><td style="text-align:center;">√</td><td></td><td>基础数据。</td></tr><tr><td>type</td><td style="text-align:center;">String</td><td style="text-align:center;">×</td><td>info</td><td>日志类型，与console同步。</td></tr><tr><td>color</td><td style="text-align:center;">Array</td><td style="text-align:center;">×</td><td>[&#39;background: #666666; color: #fff; border-radius: 4px 0 0 4px; padding: 3px 6px;&#39;, &#39;background: #1475B2; color: #fff; border-radius: 0 4px 4px 0; padding: 3px 6px;&#39;]</td><td>颜色，与content数据同步。</td></tr></tbody></table><h3 id="图片下载" tabindex="-1">图片下载 <a class="header-anchor" href="#图片下载" aria-label="Permalink to &quot;图片下载&quot;">​</a></h3><p>根据图片地址提供下载功能。</p><p>方法：downloadImage(_this: Array, url: Array, name: Array)</p><p>返回值（Array）：返回值所对应的文本。</p><h5 id="示例-8" tabindex="-1">示例 <a class="header-anchor" href="#示例-8" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSbase.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">downloadImage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, scope.row.quickResponseCode, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scope</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">row</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">itemName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}-\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scope</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">row</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">typeName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}-\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scope</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">row</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">itemNo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="参数-8" tabindex="-1">参数 <a class="header-anchor" href="#参数-8" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>_this</td><td style="text-align:center;">Object</td><td style="text-align:center;">√</td><td></td><td>this。</td></tr><tr><td>url</td><td style="text-align:center;">String</td><td style="text-align:center;">√</td><td></td><td>图片的绝对路径。</td></tr><tr><td>name</td><td style="text-align:center;">String</td><td style="text-align:center;">×</td><td>当前时间戳</td><td>图片名称。</td></tr></tbody></table><h3 id="图片流转换为base64" tabindex="-1">图片流转换为base64 <a class="header-anchor" href="#图片流转换为base64" aria-label="Permalink to &quot;图片流转换为base64&quot;">​</a></h3><p>方法：imageFileToBase64(fileFlow: Blob)</p><p>返回值（String）：返回base64，不是流或文件则返回空字符串。</p><h5 id="示例-9" tabindex="-1">示例 <a class="header-anchor" href="#示例-9" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> base64Str</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSbase.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">imageFileToBase64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fileFlow);</span></span></code></pre></div><h4 id="参数-9" tabindex="-1">参数 <a class="header-anchor" href="#参数-9" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>fileFlow</td><td style="text-align:center;">Blob</td><td style="text-align:center;">√</td><td></td><td>文件流。</td></tr></tbody></table><h3 id="获取浏览器的百分比" tabindex="-1">获取浏览器的百分比 <a class="header-anchor" href="#获取浏览器的百分比" aria-label="Permalink to &quot;获取浏览器的百分比&quot;">​</a></h3><p>方法：getWindowRatio()</p><p>返回值（Number）：返回浏览器的百分比数值。</p><h5 id="示例-10" tabindex="-1">示例 <a class="header-anchor" href="#示例-10" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSbase.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getWindowRatio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h3 id="补漏覆盖对象数据" tabindex="-1">补漏覆盖对象数据 <a class="header-anchor" href="#补漏覆盖对象数据" aria-label="Permalink to &quot;补漏覆盖对象数据&quot;">​</a></h3><p>方法：objectCopy(parameterObj: Object, defaultObj: Object)</p><p>返回值（Object）：不改变原有数据，返回一个大而全的新对象。。</p><h5 id="示例-11" tabindex="-1">示例 <a class="header-anchor" href="#示例-11" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> parameterObj</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  a: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  c: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> defaultObj</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  a: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  b: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  c: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSbase.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">objectCopy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parameterObj, defaultObj);</span></span></code></pre></div><p>返回结果：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>  a: 4,</span></span>
<span class="line"><span>  b: 2,</span></span>
<span class="line"><span>  c: 5</span></span>
<span class="line"><span>}</span></span></code></pre></div><h4 id="参数-10" tabindex="-1">参数 <a class="header-anchor" href="#参数-10" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>parameterObj</td><td style="text-align:center;">Object</td><td style="text-align:center;">√</td><td></td><td>参数对象。</td></tr><tr><td>defaultObj</td><td style="text-align:center;">Object</td><td style="text-align:center;">√</td><td></td><td>默认对象。</td></tr></tbody></table>`,99),n=[l];function h(d,r,p,k,o,c){return s(),a("div",null,n)}const b=t(e,[["render",h]]);export{y as __pageData,b as default};
