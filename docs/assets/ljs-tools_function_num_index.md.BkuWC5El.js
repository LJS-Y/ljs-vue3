import{_ as t,c as a,o as e,aj as i}from"./chunks/framework.CKd5D8ET.js";const u=JSON.parse('{"title":"数字（LJSnum）","description":"","frontmatter":{},"headers":[],"relativePath":"ljs-tools/function/num/index.md","filePath":"ljs-tools/function/num/index.md"}'),s={name:"ljs-tools/function/num/index.md"},n=i('<h1 id="数字-ljsnum" tabindex="-1">数字（LJSnum） <a class="header-anchor" href="#数字-ljsnum" aria-label="Permalink to &quot;数字（LJSnum）&quot;">​</a></h1><h2 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h2><p>数字（LJSnum），V3JS框架中常用的基础库。</p><h3 id="_1-个位数字补零" tabindex="-1">1.个位数字补零 <a class="header-anchor" href="#_1-个位数字补零" aria-label="Permalink to &quot;1.个位数字补零&quot;">​</a></h3><p>常用于日期或特殊编码位数有要求的需求。</p><p>方法：numberB0(n: Number | String, num: Number, fillStr: string)</p><p>返回值（String）：补零后的数字。</p><h5 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSnum.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">numberB0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 返回0001</span></span></code></pre></div><h4 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>n</td><td style="text-align:center;">Number, String</td><td style="text-align:center;">√</td><td></td><td>数字。</td></tr><tr><td>num</td><td style="text-align:center;">Number</td><td style="text-align:center;">×</td><td>2</td><td>位数，将要补成几位。</td></tr><tr><td>fillStr</td><td style="text-align:center;">String</td><td style="text-align:center;">×</td><td>&#39;0&#39;</td><td>填充的字符。</td></tr></tbody></table><h3 id="_2-金额分割符" tabindex="-1">2.金额分割符 <a class="header-anchor" href="#_2-金额分割符" aria-label="Permalink to &quot;2.金额分割符&quot;">​</a></h3><p>按照4位分割（仅数字）</p><p>方法：moneySplit(value: Number | String, fw: Number, symbol: String)</p><p>返回值（String）：返回分割完成的数字。</p><h5 id="示例-1" tabindex="-1">示例 <a class="header-anchor" href="#示例-1" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSnum.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">moneySplit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3889999</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 返回结果为388,9999</span></span></code></pre></div><h4 id="参数-1" tabindex="-1">参数 <a class="header-anchor" href="#参数-1" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>value</td><td style="text-align:center;">Number, String</td><td style="text-align:center;">√</td><td></td><td>需要进行分割的数字。</td></tr><tr><td>fw</td><td style="text-align:center;">Number</td><td style="text-align:center;">×</td><td>4</td><td>人民币分位符：4；美元分位符：3。</td></tr><tr><td>symbol</td><td style="text-align:center;">string</td><td style="text-align:center;">×</td><td>,</td><td>分隔符。</td></tr></tbody></table><h3 id="_3-整数上取舍" tabindex="-1">3.整数上取舍 <a class="header-anchor" href="#_3-整数上取舍" aria-label="Permalink to &quot;3.整数上取舍&quot;">​</a></h3><p>最大位数字升，其他位归0；对一个数字上取舍，适配万亿级别的数字，无上限。</p><p>方法：numberCeil(value: Number | String)</p><p>返回值（Array）：返回取舍完成的数字。</p><h5 id="示例-2" tabindex="-1">示例 <a class="header-anchor" href="#示例-2" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSnum.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">numberCeil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1234</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 返回结果为2000</span></span></code></pre></div><h4 id="参数-2" tabindex="-1">参数 <a class="header-anchor" href="#参数-2" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>value</td><td style="text-align:center;">Number, String</td><td style="text-align:center;">√</td><td></td><td>数字。</td></tr></tbody></table><h3 id="_4-数字单位升级" tabindex="-1">4.数字单位升级 <a class="header-anchor" href="#_4-数字单位升级" aria-label="Permalink to &quot;4.数字单位升级&quot;">​</a></h3><p>数字进行万、亿、万亿处理。</p><p>方法：longNumText(value: Number | String, ws: Number)</p><p>返回值（Array）：返回升级后的数据。</p><h5 id="示例-3" tabindex="-1">示例 <a class="header-anchor" href="#示例-3" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSnum.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">longNumText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12345</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 返回1.2万</span></span></code></pre></div><h4 id="参数-3" tabindex="-1">参数 <a class="header-anchor" href="#参数-3" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>value</td><td style="text-align:center;">Number, String</td><td style="text-align:center;">√</td><td></td><td>原型数据。</td></tr><tr><td>ws</td><td style="text-align:center;">Number</td><td style="text-align:center;">×</td><td>2</td><td>保留几位小数。</td></tr></tbody></table><h3 id="_5-数字保留小数位" tabindex="-1">5.数字保留小数位 <a class="header-anchor" href="#_5-数字保留小数位" aria-label="Permalink to &quot;5.数字保留小数位&quot;">​</a></h3><p>数字、字符串，处理小数位。特殊数字返回结果精度高于toFixed(2)的结果。</p><p>注：整数不保留小数位，非数字原样返回。</p><p>方法：numberChangeDecimal (value: Number | String, ws: Number)</p><p>返回值（String）：返回处理后的数据。</p><h5 id="示例-4" tabindex="-1">示例 <a class="header-anchor" href="#示例-4" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSnum.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">numberChangeDecimal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12.3456</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="参数-4" tabindex="-1">参数 <a class="header-anchor" href="#参数-4" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>value</td><td style="text-align:center;">Number, String</td><td style="text-align:center;">√</td><td></td><td>原型数据。</td></tr><tr><td>ws</td><td style="text-align:center;">Number</td><td style="text-align:center;">×</td><td>2</td><td>保留几位小数。</td></tr></tbody></table><h3 id="_6-平均处理" tabindex="-1">6.平均处理 <a class="header-anchor" href="#_6-平均处理" aria-label="Permalink to &quot;6.平均处理&quot;">​</a></h3><p>把一个总数按照约定份数进行平均。</p><p>方法：averageNum(total: Number | String, shares: Number, decimal: Number)</p><p>返回值（Array）：返回平均好的数据集合。</p><h5 id="示例-5" tabindex="-1">示例 <a class="header-anchor" href="#示例-5" aria-label="Permalink to &quot;示例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$LJSnum.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">averageNum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="参数-5" tabindex="-1">参数 <a class="header-anchor" href="#参数-5" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>total</td><td style="text-align:center;">Number, String</td><td style="text-align:center;">√</td><td></td><td>总数值。</td></tr><tr><td>shares</td><td style="text-align:center;">Number</td><td style="text-align:center;">×</td><td>12</td><td>需要平均成多少份，默认12份。</td></tr><tr><td>decimal</td><td style="text-align:center;">Number</td><td style="text-align:center;">×</td><td>2</td><td>保留小数位，默认2位。</td></tr></tbody></table>',52),l=[n];function h(d,r,p,o,k,c){return e(),a("div",null,l)}const b=t(s,[["render",h]]);export{u as __pageData,b as default};
